- fail:
    msg: You need to specify exactly one host to run galaxy.
  when: groups.galaxy|length != 1

# - name: Add server name to the apache.conf
#   lineinfile:
#       dest: "/etc/apache2/apache2.conf"
#       regexp: ^ServerName
#       line: "ServerName {{ inventory_hostname }}"
#       state: present
#   notify:
#       - restart apache2

# - name: Ensure locale is en_US.UTF-8
#   lineinfile:
#       dest: /etc/default/locale
#       regexp: LC_ALL
#       line: "LC_ALL=\"en_US.UTF-8\""

- name: Install required packages
  apt:
      name: "{{ item }}"
      state: latest
  with_items:
      - git
      # Galaxy needs python 2.7.
      - python
      - python-virtualenv
      - python-dev
      - python-requests
      - virtualenv
      - postgresql
      - postgresql-contrib
      - python-psycopg2
      - docker

- name: "Clone galaxy repo {{galaxy_repo}} repo"
  git:
      repo: "{{ galaxy_repo }}"
      dest: "{{ galaxy_directory }}"
      clone: yes
      force: yes
      version: "{{ galaxy_version }}"
      accept_hostkey: yes

- name: Create postgres user and database
  become: yes
  become_user: postgres
  shell: |
    createuser {{ galaxy_db_user }}
    createdb {{ galaxy_db_name }}
    psql -c "ALTER USER {{ galaxy_db_user }} WITH ENCRYPTED PASSWORD  '{{ galaxy_db_password }}';"
  tags: postgres

- name: Create tool_conf.xml file
  copy:
      remote_src: True
      src: "{{ galaxy_directory }}/config/tool_conf.xml.sample"
      dest: "{{ galaxy_directory }}/config/tool_conf.xml"

- name: Setup galaxy.ini
  template:
    src: galaxy.ini.j2
    dest: "{{ galaxy_directory }}/config/galaxy.ini"
    force: yes

- name: Setup job_conf
  template:
    src: job_conf.xml.j2
    dest: "{{ galaxy_directory }}/config/job_conf.xml"
    force: yes

- name: Setup systemd
  template:
    src: galaxy.service.j2
    dest: "/lib/systemd/system/galaxy.service"
    force: yes

- name: Login to docker registry
  docker_login:
    registry: "{{ registry_url }}"
    username: "{{ registry_username }}"
    password: "{{ registry_password }}"
  when: registry_url is defined

- name: Install Galaxy
  shell: "{{galaxy_directory}}/run.sh --status | echo OK"

- name: Enable Galaxy in systemd
  shell: "systemctl enable galaxy"
  notify: start galaxy
